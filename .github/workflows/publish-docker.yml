name: Publish Docker

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'docker tag'
        required: true
  release:
    types: [published]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set tag
        run: |
            if [[ -n "${{ github.event.inputs.tag }}" ]]; then
              TAG=${{ github.event.inputs.tag }}
            elif [[ "${{ github.ref.name }}" == 'master' ]]; then
              TAG="latest"
            else
              TAG="${{ github.ref.name }}"
            fi
            echo "TAG=${TAG}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push latest
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
              nusak/timetrace-gui:${{ env.TAG }}
              nusak/timetrace-gui:latest
  docker-combined:
    runs-on: ubuntu-latest
    steps:
      - name: Set tag
        run: |
            if [[ -n "${{ github.event.inputs.tag }}" ]]; then
              TAG=${{ github.event.inputs.tag }}
            elif [[ "${{ github.base_ref }}" == 'master' ]]; then
              TAG="latest"
            else
              TAG="${{ github.base_ref }}"
            fi
            echo "TAG=${TAG}" >> $GITHUB_ENV
      - name: Get Timetrace version
        run: |
            VER=`curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/dominikbraun/timetrace/releases/latest | awk -F/ '{print $8}'`
            echo "VER=${VER}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push latest
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
              nusak/timetrace-combined:${{ env.TAG }}
              nusak/timetrace-combined:latest
          file: Dockerfile.combined
          build-args: |
              VERSION=${{ env.TAG}}
              VER=${{ env.VER}}
